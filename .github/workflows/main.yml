---
name: Main

permissions:
  id-token: write
  contents: read
  security-events: write

on:
  workflow_dispatch:

  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - ".github/**"

  pull_request:
    branches:
      - "*"
    paths-ignore:
      - "**.md"
      - ".github/**"

jobs:
  build:
    name: Build
    uses: andreswebs/gh-actions/.github/workflows/aws-ecr-push-image.yml@main
    with:
      runs-on: ubuntu-latest
      aws-region: ${{ vars.AWS_REGION }}
      role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
      ecr-repo-name: ${{ vars.AWS_ECR_REPO_NAMESPACE }}/sns-to-telegram
      context-dir: ./lambda
      image-artifact: image-sns-to-telegram

  tf-fmt-check:
    needs: [build]
    uses: andreswebs/gh-actions/.github/workflows/tf-fmt-check.yml@main
    with:
      runs-on: ubuntu-latest
      working-directory: ${{ github.workspace }}

  ## workaround for issue:
  # https://github.com/orgs/community/discussions/26671
  vars-dev:
    needs: [tf-fmt-check]
    runs-on: ubuntu-latest
    environment: dev
    outputs:
      workdir: ${{ vars.WORKDIR }}
      backend-key: ${{ vars.BACKEND_KEY }}
      ssm-param-telegram-bot-token: ${{ vars.SSM_PARAM_TELEGRAM_BOT_TOKEN }}
      ssm-param-telegram-chat-id: ${{ vars.SSM_PARAM_TELEGRAM_CHAT_ID }}
      ssm-param-lambda-image-uri: ${{ vars.SSM_PARAM_LAMBDA_IMAGE_URI }}
    steps:
      - name: Get image URI
        id: image-uri
        uses: andreswebs/gh-actions/.github/actions/artifact-as-value@main
        with:
          key: image-sns-to-telegram

      - name: Update config parameter
        uses: andreswebs/gh-actions/.github/actions/aws-ssm-put-param@main
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
          parameter-name: ${{ vars.SSM_PARAM_LAMBDA_IMAGE_URI }}
          parameter-value: ${{ steps.image-uri.outputs.value }}-arm64
          parameter-type: String

  tfbackend-dev:
    needs: [vars-dev]
    uses: andreswebs/gh-actions/.github/workflows/tfbackend.yml@main
    with:
      runs-on: ubuntu-latest
      environment: dev
      bucket: ${{ vars.BACKEND_BUCKET }}
      table: ${{ vars.BACKEND_TABLE }}
      key: ${{ needs.vars-dev.outputs.backend-key }}
      region: ${{ vars.AWS_REGION }}
      tfbackend: dev.s3.tfbackend

  tfvars-dev:
    needs: [vars-dev]
    uses: ./.github/workflows/tfvars.yml
    with:
      runs-on: ubuntu-latest
      ssm-param-telegram-bot-token: ${{ needs.vars-dev.outputs.ssm-param-telegram-bot-token }}
      ssm-param-telegram-chat-id: ${{ needs.vars-dev.outputs.ssm-param-telegram-chat-id }}
      ssm-param-lambda-image-uri: ${{ needs.vars-dev.outputs.ssm-param-lambda-image-uri }}

  tf-plan-dev:
    name: TF Plan - dev
    needs: [tfbackend-dev, tfvars-dev]
    uses: andreswebs/gh-actions/.github/workflows/tf-plan.yml@main
    with:
      runs-on: ubuntu-latest
      environment: dev
      aws-region: ${{ vars.AWS_REGION }}
      role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
      working-directory: ${{ needs.vars-dev.outputs.workdir }}
      tfbackend: ${{ needs.tfbackend-dev.outputs.tfbackend }}
      tfbackend-is-artifact: true
      tfvars: ${{ needs.tfvars-dev.outputs.tfvars }}
      tfplan: dev.tfplan

  # image-tag-dev:
  #   needs: [tf-plan-dev]
  #   uses: andreswebs/gh-actions/.github/workflows/aws-ecr-add-env-tag.yml@main
  #   with:
  #     runs-on: ubuntu-latest
  #     environment: dev
  #     aws-region: ${{ vars.AWS_REGION }}
  #     role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
  #     image-uri:

  tf-apply-dev:
    name: TF Apply - dev
    needs: [tf-plan-dev]
    uses: andreswebs/gh-actions/.github/workflows/tf-apply.yml@main
    with:
      runs-on: ubuntu-latest
      environment: dev
      aws-region: ${{ vars.AWS_REGION }}
      role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
      working-directory: ${{ needs.vars-dev.outputs.workdir }}
      tfbackend: ${{ needs.tfbackend-dev.outputs.tfbackend }}
      tfbackend-is-artifact: true
      tfplan: ${{ needs.tf-plan-dev.outputs.tfplan }}
