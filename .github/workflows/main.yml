---
name: Main

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - ./.github/dependabot.yml

  pull_request:
    branches:
      - '*'
    paths-ignore:
      - '**.md'
      - ./.github/dependabot.yml

jobs:

  build:

    strategy:
      matrix:
        function-dir: [ lambda ]

    uses: andreswebs/gh-actions/.github/workflows/ecr-publish-image.yml@main
    with:
      runs-on: ubuntu-latest
      aws-region: ${{ vars.AWS_REGION }}
      role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
      ecr-repo-name: ${{ vars.AWS_ECR_REPO_NAME }}
      context-dir: ./${{ matrix.function-dir }}
      matrix-step-name: build
      matrix-key: ${{ matrix.function-dir }}

  images-tfvars:
    needs: [ build ]
    name: Images TF vars
    uses: andreswebs/gh-actions/.github/workflows/images-tfvars.yml@main
    with:
      runs-on: ubuntu-latest
      matrix-step-name: build

  tfbackend-dev:
    needs: [ build ]
    name: TF Backend - dev
    uses: andreswebs/gh-actions/.github/workflows/tfbackend.yml@main
    with:
      runs-on: ubuntu-latest
      environment: dev
      bucket: ${{ vars.BACKEND_BUCKET }}
      table: ${{ vars.BACKEND_TABLE }}
      key: ${{ vars.BACKEND_KEY }}
      region: ${{ vars.AWS_REGION }}
      tfbackend: dev.s3.tfbackend

  # tf-plan-dev:
  #   name: TF Plan - dev
  #   needs: [ tfbackend-dev, image-tfvars ]
  #   uses: andreswebs/gh-actions/.github/workflows/tf-plan.yml@main
  #   with:
  #     runs-on: ununtu-latest
  #     environment: dev
  #     working-directory: ${{ vars.WORKDIR }}
  #     aws-region: ${{ vars.AWS_REGION }}
  #     role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
  #     tfbackend: ${{ needs.tfbackend-dev.outputs.tfbackend }}
  #     tfbackend-is-artifact: true
  #     tfvars: ${{ needs.images-tfvars.outputs.tfvars }}
  #     tfplan: dev.tfplan
